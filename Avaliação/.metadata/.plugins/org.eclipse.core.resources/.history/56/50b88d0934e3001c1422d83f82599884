package viewers;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.Currency;
import java.util.Locale;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import java.awt.Color;

import controllers.OrcamentoProcess;
import models.Orcamento;

public class OrcamentoForm extends JDialog implements ActionListener {
	
	private static final long serialVersionUID = 1L;
	private JPanel painel;
	private JLabel id, fornecedor, produto, preco, rotulos;
	private JTextField tfId, tfFornecedor, tfProduto, tfPreco;
	private JTable table;
	private DefaultTableModel tableModel;
	private JScrollPane rolagem;
	private JButton create, read, update, delete;
	private int autoId = Integer.parseInt(OrcamentoProcess.orcamentos.get(OrcamentoProcess.orcamentos.size() - 1).getId()) + 1;

	private final Locale BRASIL = new Locale("pt", "BR");
	private DecimalFormat df = new DecimalFormat("#.00");
	
	public OrcamentoForm() {
		
		setTitle("Cadastro de Manutenções");
		setBounds(150, 170, 450, 400);
		painel = new JPanel();
		painel.setBackground(new Color(36, 67, 166));
		setContentPane(painel);
		setLayout(null);
		
		id = new JLabel("ID:");
		id.setBounds(15, 15, 50, 20);
		painel.add(id);
		tfId = new JTextField(String.format("%d", autoId));
		tfId.setEditable(false);
		tfId.setBounds(120, 15, 100, 20);
		painel.add(tfId);
		
		fornecedor = new JLabel("Fornecedor:");
		fornecedor.setBounds(15, 45, 50, 20);
		painel.add(fornecedor);
		tfFornecedor = new JTextField();
		tfFornecedor.setBounds(120, 45, 100, 20);
		painel.add(tfFornecedor);
		
		produto = new JLabel("Produto:");
		produto.setBounds(15, 45, 50, 20);
		painel.add(produto);
		tfProduto = new JTextField();
		tfProduto.setBounds(120, 45, 100, 20);
		painel.add(tfProduto);
		
		preco = new JLabel("Preço:");
		preco.setBounds(15, 45, 50, 20);
		painel.add(preco);
		tfPreco = new JTextField();
		tfPreco.setBounds(120, 45, 100, 20);
		painel.add(tfPreco);
		
		rotulos = new JLabel("Id | Fornecedor | Produto | Preço:");
		rotulos.setBounds(20, 310, 500, 30);
		painel.add(rotulos);
		
		table = new JTable();
		tableModel = new DefaultTableModel();
		tableModel.addColumn("ID");
		tableModel.addColumn("Fornecedor");
		tableModel.addColumn("Produto");
		tableModel.addColumn("Preço");
		if(OrcamentoProcess.orcamentos.size() != 0) {
			preencherTabela();
		}
		table = new JTable(tableModel);
		table.setEnabled(false);
		rolagem = new JScrollPane(table);
		rolagem.setBounds(15, 205, 400, 180);
		painel.add(rolagem);
		
		create = new JButton("Cadastrar");
		read = new JButton("Buscar");
		update = new JButton("Atualizar");
		delete = new JButton("Excluir");
		create.setBounds(275, 15, 100, 20);
		read.setBounds(275, 40, 100, 20);
		update.setBounds(275, 65, 100, 20);
		delete.setBounds(275, 90, 100, 20);
		update.setEnabled(false);
		delete.setEnabled(false);
		painel.add(create);
		painel.add(read);
		painel.add(update);
		painel.add(delete);
		
		delete.setEnabled(false);
		update.setEnabled(false);
		
		create.addActionListener(this);
		read.addActionListener(this);
		update.addActionListener(this);
		delete.addActionListener(this);
		
	}
	
	private void preencherTabela() {
		int totLinhas = tableModel.getRowCount();
		if(tableModel.getRowCount() > 0) {
			for (int i = 0; i < totLinhas; i++) {
				tableModel.removeRow(0);
			}
		}
		for (Orcamento o : OrcamentoProcess.orcamentos) {
			tableModel.addRow(new String[] {o.getId(), o.getFornecedor(), o.getProduto(), String.format("%.2f", o.getPreco())});
		}
	}
	
	private void cadastrar() {
		if(tfId.getText().length() != 0 && tfFornecedor.getText().length() != 0 && tfProduto.getText().length() != 0 
				&& tfPreco.getText().length() != 0) {
			
			df.setCurrency(Currency.getInstance(BRASIL));
			double preco = 0;
			int id = 0;
			try {
				preco = Double.parseDouble(df.parse(tfPreco.getText()).toString());
				id = Integer.parseInt(tfId.getText().toString());
			}catch(ParseException e) {
				System.out.println(e);
			}
			OrcamentoProcess.orcamentos.add(new Orcamento(id, tfFornecedor.getText(), tfProduto.getText(), preco));
			OrcamentoProcess.salvar();
			preencherTabela();
			limparCampos();
		}else {
			JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
		}
	}
	
	private void limparCampos() {
		tfFornecedor.setText(null);
		tfProduto.setText(null);
		tfPreco.setText(null);
	}
	
	private void alterar() {
		int id = Integer.parseInt(tfId.getText());
		int indice = -1;
		for (Orcamento orcamento : OrcamentoProcess.orcamentos) {
			if(Integer.parseInt(orcamento.getId()) == id) {
				indice = OrcamentoProcess.orcamentos.indexOf(orcamento);
			}
		}
		if (tfId.getText().length() != 0 && tfFornecedor.getText().length() != 0 && tfProduto.getText().length() != 0 
				&& tfPreco.getText().length() != 0) {
			
			df.setCurrency(Currency.getInstance(BRASIL));
			double preco = 0;
			try {
				preco = Double.parseDouble(df.parse(tfPreco.getText()).toString());
				id = Integer.parseInt(tfId.getText().toString());
			}catch(ParseException e) {
				System.out.println(e);
			}

			OrcamentoProcess.orcamentos.set(indice, new Orcamento(id, tfFornecedor.getText(), tfProduto.getText(), preco));
			
			limparCampos();
		} else {
			JOptionPane.showMessageDialog(this, "Favor preencher todos os campos.");
		}
		create.setEnabled(true);
		update.setEnabled(false);
		delete.setEnabled(false);
		tfId.setText(String.format("%d", Integer.parseInt(OrcamentoProcess.orcamentos.get(OrcamentoProcess.orcamentos.size() - 1).getId()) + 1));
		OrcamentoProcess.salvar();
	}
	

	@Override
	public void actionPerformed(ActionEvent e) {
	
		
	}
	
	public static void main (String[] args) throws ParseException {
		
		OrcamentoProcess.abrir();
		OrcamentoForm tela = new OrcamentoForm();
		tela.setVisible(true);
		
	}
	
}